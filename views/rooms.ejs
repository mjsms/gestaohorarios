<!-- Botão para abrir o modal -->
<a class="waves-effect waves-light btn modal-trigger" href="#uploadModal">Upload de Salas</a>

<!-- Estrutura do modal -->
<div id="uploadModal" class="modal">
    <div class="modal-content">
        <h4>Upload de Salas</h4>
        <form id="uploadSalasForm" enctype="multipart/form-data">
            <div class="file-field input-field">
                <div class="btn">
                    <span>File</span>
                    <input type="file" id="salasFile" name="file">
                </div>
                <div class="file-path-wrapper">
                    <input class="file-path validate" type="text" placeholder="Selecione o ficheiro de salas (CSV)">
                </div>
            </div>
            <button type="submit" class="btn waves-effect waves-light">Upload Salas</button>
        </form>
        <!-- Spinner -->
        <div id="spinner" style="display: none; text-align: center; margin-top: 20px;">
            <div class="preloader-wrapper active">
                <div class="spinner-layer spinner-blue">
                    <div class="circle-clipper left"><div class="circle"></div></div>
                    <div class="gap-patch"><div class="circle"></div></div>
                    <div class="circle-clipper right"><div class="circle"></div></div>
                </div>
        </div>
        <p>Processando o upload...</p>
    </div>
    </div>
    <div class="modal-footer">
        <a href="#!" class="modal-close waves-effect waves-green btn-flat">Fechar</a>
    </div>
</div>

<div class="row">
    <!-- Container para a tabela do Tabulator com scroll horizontal -->
    <h3>Salas</h3>
    <div id="salas-table"></div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        var elems = document.querySelectorAll('.modal');
        var instances = M.Modal.init(elems);
    });

    // Código para o envio do formulário
    document.getElementById('uploadSalasForm').addEventListener('submit', function (e) {
        e.preventDefault(); // Evitar o reload da página

        const formData = new FormData(this);
        const spinner = document.getElementById('spinner');
        const form = document.getElementById('uploadSalasForm');

        form.style.display = 'none'; // Esconder o formulário
        spinner.style.display = 'block'; // Mostrar o spinner

        fetch('/classroom/upload', {
            method: 'POST',
            body: formData,
        })
            .then((response) => {
                if (!response.ok) {
                    throw new Error('Erro ao carregar o ficheiro.');
                }
                return response.text();
            })
            .then((data) => {
                // Ocultar o spinner e mostrar mensagem de sucesso
                spinner.style.display = 'none';
                M.toast({ html: 'Salas carregadas com sucesso!', classes: 'green' });
                // Atualizar a página para mostrar a tabela atualizada
                location.reload()
            })
            .catch((error) => {
                // Mostrar o formulário novamente e ocultar o spinner em caso de erro
                form.style.display = 'block';
                spinner.style.display = 'none';
                M.toast({ html: error.message || 'Erro ao carregar o ficheiro.', classes: 'red' });
            });
    });



    document.addEventListener('DOMContentLoaded', function () {
    <% if (classRooms) { %>
        const table = new Tabulator("#salas-table", {
            data: <%- JSON.stringify(classRooms) %>, // Dados carregados do servidor
            autoColumns: false, // Desativar geração automática de colunas
            layout: "fitColumns",
            columns: [
                { title: "ID", field: "id", sorter: "number" },
                { 
                    title: "Nome da Sala", 
                    field: "name", 
                    sorter: "string", 
                    widthGrow: 3,
                    formatter: function(cell, formatterParams) {
                        const id = cell.getRow().getData().id;
                        const name = cell.getValue();
                        return `<a href="/classroom/${id}" style="text-decoration:none;">${name} </a>`;
                    },
                },
                { title: "Capacidade", field: "capacity", sorter: "number", widthGrow: 2 },
                { title: "Número de Características", field: "featureCount", sorter: "number", widthGrow: 3 },
            ],
        });
        <% } %>
    });

</script>
